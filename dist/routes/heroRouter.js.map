{"version":3,"file":"heroRouter.js","sourceRoot":"","sources":["../../src/routes/heroRouter.ts"],"names":[],"mappings":";;AACA,IAAM,MAAM,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC/C;IAiBI;QACI,oBAAoB;IACxB,CAAC;IAlBa,iBAAM,GAApB,UAAqB,MAAc;QAC/B,KAAK;QACL,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;QAE9D,kBAAkB;QAClB,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;YACtE,IAAI,UAAU,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,mBAAmB;QACnB,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;YAC1E,IAAI,UAAU,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC;IAOD;;OAEG;IACI,2BAAM,GAAb,UAAc,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzD,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,EAAE,KAAK,KAAK,EAAjB,CAAiB,CAAC,CAAC;QAClD,IAAI,IAAI,EAAE;YACN,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;iBACV,IAAI,CAAC;gBACF,OAAO,EAAE,SAAS;gBAClB,MAAM,EAAE,GAAG,CAAC,MAAM;gBAClB,IAAI,MAAA;aACP,CAAC,CAAC;SACV;aACI;YACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;iBACV,IAAI,CAAC;gBACF,OAAO,EAAE,kCAAkC;gBAC3C,MAAM,EAAE,GAAG,CAAC,MAAM;aACrB,CAAC,CAAC;SACV;IACL,CAAC;IAED;;OAEG;IACI,2BAAM,GAAb,UAAc,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC;IAGL,iBAAC;AAAD,CAAC,AApDD,IAoDC;AApDY,gCAAU","sourcesContent":["import {Router, Request, Response, NextFunction} from 'express';\nconst Heroes = require('../../dist/data.json');\nexport class HeroRouter {\n    public static create(router: Router) {\n        //log\n        console.log(\"[HeroRoute::create] Creating HeroRoutes route.\");\n\n        //add getAll route\n        router.get(\"/api/heroes\", (req: Request, res: Response, next: NextFunction) => {\n            new HeroRouter().getAll(req, res, next);\n        });\n\n        // add getOne route\n        router.get(\"/api/heroes/:id\", (req: Request, res: Response, next: NextFunction) => {\n            new HeroRouter().getOne(req, res, next);\n        });\n    }\n\n\n    constructor() {\n        // not much here yet\n    }\n\n    /**\n     * GET one hero by id\n     */\n    public getOne(req: Request, res: Response, next: NextFunction) {\n        let query = parseInt(req.params.id);\n        let hero = Heroes.find(hero => hero.id === query);\n        if (hero) {\n            res.status(200)\n                .send({\n                    message: 'Success',\n                    status: res.status,\n                    hero\n                });\n        }\n        else {\n            res.status(404)\n                .send({\n                    message: 'No hero found with the given id.',\n                    status: res.status\n                });\n        }\n    }\n\n    /**\n     * GET all Heroes.\n     */\n    public getAll(req: Request, res: Response, next: NextFunction) {\n        res.send(Heroes);\n    }\n\n\n}"]}